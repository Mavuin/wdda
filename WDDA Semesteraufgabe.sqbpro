<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/marvi/OneDrive/Dokumente/BFH/4 Semester/WDDA/WDDA_Teil_A/wdda_teil_A_database.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="0" synchronous="1"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="4076"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,12:mainDataset_WDDA"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="A" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="46"/><column index="2" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="B" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Dataset_WDDA" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="300"/><column index="2" value="297"/><column index="3" value="300"/><column index="4" value="300"/><column index="5" value="126"/><column index="6" value="61"/><column index="7" value="98"/><column index="8" value="128"/><column index="9" value="82"/><column index="10" value="233"/><column index="11" value="169"/><column index="12" value="109"/><column index="13" value="83"/><column index="14" value="113"/><column index="15" value="110"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="city" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="51"/><column index="2" value="62"/><column index="3" value="169"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="country" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="78"/><column index="2" value="98"/><column index="3" value="128"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="firm" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="122"/><column index="3" value="75"/><column index="4" value="300"/><column index="5" value="297"/><column index="6" value="300"/><column index="7" value="83"/><column index="8" value="300"/><column index="9" value="50"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="state" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="1"/></sort><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/* Erstellung der Tabellen basierent auf dem modelierten ERD*/

PRAGMA foreign_key = ON;

PRAGMA foreign_key_list(state);

DROP TABLE city;
DROP TABLE country;
DROP TABLE firm;
DROP TABLE funding;
DROP TABLE region;
DROP TABLE region_to_city;
DROP TABLE state;
DROP TABLE status;

CREATE TABLE country (
country_id INTEGER NOT NULL,
country_code TEXT,
country_name TEXT,
PRIMARY KEY (country_id AUTOINCREMENT)
);

CREATE TABLE state (
state_id INTEGER NOT NULL,
country_id INTEGER,
state_code TEXT,
PRIMARY KEY (state_id AUTOINCREMENT),
FOREIGN KEY (country_id) REFERENCES country (country_id)
);

CREATE TABLE city (
city_id INTEGER NOT NULL,
state_id INTEGER,
city_name TEXT,
PRIMARY KEY (city_id AUTOINCREMENT),
FOREIGN KEY (state_id) REFERENCES state(state_id)
);

CREATE TABLE region (
region_id INTEGER NOT NULL,
state_id INTEGER,
region_name TEXT,
PRIMARY KEY (region_id AUTOINCREMENT),
FOREIGN KEY (state_id) REFERENCES state (state_id)
);

CREATE TABLE region_to_city (
region_to_city_id INTEGER NOT NULL,
region_id INTEGER,
city_id INTEGER,
PRIMARY KEY (region_to_city_id AUTOINCREMENT),
FOREIGN KEY (region_id) REFERENCES region (region_id),
FOREIGN KEY (city_id) REFERENCES city (city_id)
);

CREATE TABLE funding (
funding_id INTEGER NOT NULL,
first_funding_at TEXT,
last_funding_at TEXT,
funding_rounds INTEGER,
funding_total_usd INTEGER,
PRIMARY KEY (funding_id AUTOINCREMENT)
);

CREATE TABLE firm (
firm_id INTEGER NOT NULL,
region_to_city_id INTEGER,
funding_id INTEGER,
status_id INTEGER,
permalink TEXT,
name TEXT,
homepage_url TEXT,
founded_at TEXT,
category_list TEXT,
PRIMARY KEY (firm_id AUTOINCREMENT),
FOREIGN KEY (region_to_city_id) REFERENCES region_to_city (region_to_city_id),
FOREIGN KEY (funding_id) REFERENCES funding (funding_id),
FOREIGN KEY (status_id) REFERENCES status (status_id)
);

CREATE TABLE status (
status_id INTEGER NOT NULL,
status TEXT,
PRIMARY KEY (status_id AUTOINCREMENT)
);

INSERT INTO country (country_code, country_name) SELECT country_code, country FROM Dataset_WDDA;
INSERT INTO state (state_code) SELECT state_code FROM Dataset_WDDA; 
INSERT INTO city (city_name) SELECT city FROM Dataset_WDDA;
INSERT INTO region (region_name) SELECT region FROM Dataset_WDDA;
INSERT INTO funding (first_funding_at, last_funding_at, funding_rounds, funding_total_usd) SELECT first_funding_at, last_funding_at, funding_rounds, funding_total_usd FROM Dataset_WDDA;
INSERT INTO firm (permalink, name, homepage_url, founded_at, category_list) SELECT permalink, name, homepage_url, founded_at, category_list FROM Dataset_WDDA;
INSERT INTO status (status) SELECT status FROM Dataset_WDDA;

/* Frage 1.
a) Erstellen Sie eine View, welche den ursprünglichen CSV-Datensatz aus dem aus den 
von Ihnen definierten und befüllten Tabellen rekonstruiert.*/

CREATE VIEW wdda_view AS SELECT 
country_code,
country_name,
city_name,
permalink,
name,
homepage_url,
founded_at,
founded_at,
category_list,
first_funding_at,
last_funding_at,
funding_rounds,
funding_total_usd,
region_name,
state_code,
status
FROM city, country, firm, funding, region, state, status;

/*b) Wie viele Datensätze sind in der View?*/

SELECT count(*) FROM wdda_view;

/*c) Zeigen Sie alle Spalten und Zeilen der View mit Start-ups aus der Stadt «Évry» an.*/

SELECT * FROM wdda_view WHERE city == &quot;Évry&quot;;

/* Frage 2. Wie viele unterschiedliche Start-ups gibt es in der Datenbank, 
die mehr als USD 2‘000‘000‘000 (2 Milliarden) Funding bekommen haben? */

SELECT count (*) FROM wdda_view WHERE funding_total_usd = 2000000000;

/* Frage 3. Wie viele Start-ups gibt es in der Datenbank, 
die im Bereich Spiele («Games») unterwegs sind?*/

SELECT count (*) FROM firm WHERE firm.category_list = &quot;Games&quot;;

/* Frage 4. Erzeugen Sie eine Liste aller Städte, absteigend sortiert nach dem
durchschnittlichen Funding, dass die Startups in dieser Stadt erhalten haben.
Angezeigt werden sollen der Name der Stadt, der Ländercode und das auf 2
Nachkommastellen gerundete durchschnittliche Funding. */

SELECT city_name, country_code, round(avg(funding_total_usd),2) AS average_funding FROM city, country, funding
GROUP BY city_name, country_code
ORDER BY average_funding DESC;

/* Frage 5. Einige Start-ups haben mehrere Finanzierungsrunden durchlaufen. Welches
Unternehmen in Indien hat im Schnitt pro Finanzierungsrunde am meisten Geld
eingenommen? Angezeigt werden sollen der «permalink», der Namen des
Unternehmens, die durchschnittlichen Einnahmen pro Finanzierungsrunde und
die Anzahl Finanzierungsrunden. */

SELECT permalink, name, AVG(funding_total_usd/funding_rounds) 
AS avg_funding_per_round, funding_rounds FROM firm, funding
WHERE country_code = &quot;IND&quot;;
GROUP BY permalink, name, funding_rounds
ORDER BY avg_funding_per_round DESC
LIMIT 1;

/* Frage 6. Wie viele unterschiedliche Regionen gibt es in der Datenbank? */

SELECT count(DISTINCT region_name) as regions FROM region;</sql><current_tab id="0"/></tab_sql></sqlb_project>
